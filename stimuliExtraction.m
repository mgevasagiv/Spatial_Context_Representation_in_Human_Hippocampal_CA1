% abcd_con

main_data_directory = 'E:\spatcon_hdz\data\raw_behavioral\';
main_data_localCopy = 'E:\spatcon_hdz\data_p\onsetFiles';


% Perform copy once - 
% % % Onset files are generated by load_ABCDCon.R
% Load ConABCD_objectRecog_s030.dat - which are items shown in scanner

subjectsID = [1:2,6:14,18:30]; % in dropbox
% % for iiS = subjectsID
% %     localDir_perPt = fullfile(main_data_localCopy,sprintf('s%03d',iiS));
% %     mkdir(localDir_perPt)
% %     pt_directoryOrig = fullfile(main_data_directory,sprintf('s%03d',iiS));
% %     list = dir(sprintf('%s\\onsets_file.csv',pt_directoryOrig));
% %     disp(sprintf('copy %s to %s',fullfile(pt_directoryOrig,list(1).name),localDir_perPt))
% %     copyfile(fullfile(pt_directoryOrig,list(1).name),localDir_perPt)
% % end


%% Extracting location in room from experimental files
excel_sheet = 'E:\spatcon_hdz\data_p\onsetFiles\ObjectList_SketchUp.xlsx';
[num,txt,raw] = xlsread(excel_sheet,'ObjectLocationsByVideo');
[M,N] = size(raw);
REF_ID.object_num = 1;
REF_ID.video = 2;
REF_ID.house = 3;
REF_ID.room = 4;
REF_ID.locationInRoom = 5;
REF_ID.BlockID = 6; % out of 4 blocks per scanning session
REF_ID.trialNum = 7; % Out of 5X trials per block
REF_ID.Rhit = 8; % rhit
REF_ID.HC = 9; % if house correctly identified after the scan = 1
REF_ID.RC = 10; % if room correctly identified after the scan = 1
REF_ID.LureItem = 11;
REF_ID.CR = 12;


objectID_REF= [];
% learned objects + lures
for ii_oi = 2:306
    objectID_REF(ii_oi-1,REF_ID.object_num ) = raw{ii_oi,1};
end

% only for learned objects - 240 in total
for ii_oi = 2:241
    objectID_REF(ii_oi-1,REF_ID.video) = str2num(raw{ii_oi,4}(1:end-1));
end

% only for learned objects - 240 in total
for ii_oi = 2:241
    if strcmp(raw{ii_oi,4}(end),'B')
        objectID_REF(ii_oi-1,REF_ID.house) = 1;
        objectID_REF(ii_oi-1,REF_ID.room) = str2num(raw{ii_oi,5}(end-2));
        objectID_REF(ii_oi-1,REF_ID.locationInRoom) = str2num(raw{ii_oi,5}(end));
    else
        objectID_REF(ii_oi-1,REF_ID.house) = -1;
        objectID_REF(ii_oi-1,REF_ID.room) = str2num(raw{ii_oi,6}(end-2));
        objectID_REF(ii_oi-1,REF_ID.locationInRoom) = str2num(raw{ii_oi,6}(end));
    end
end
clear raw

%%
for iiS = 1:length(subjectsID)
    subj = subjectsID(iiS);
    disp(subj)
    
    % 
    excel_sheet = fullfile(main_data_localCopy,sprintf('s%03d',subj),'onsets_file.csv');

    [num,txt,raw] = xlsread(excel_sheet,'onsets_file');
    
    colID.trialTypeKey = 3;
    colID.BlockID = 5;
    colID.trialNum = 10;
    colID.ObjectID = 6;
    colID.byMemoryFHitMiss = 16;
    
    if ~strcmpi('ObjectID',raw{1, colID.ObjectID}) ||...
            ~strcmpi('BlockID',raw{1, colID.BlockID}) ||...
            ~strcmpi('trialTypeKey',raw{1, colID.trialTypeKey}) ||...
            ~strcmpi('objRec_trialNum',raw{1, colID.trialNum})
        
        disp('mismatch with XLS columns')
        continue
        
    end

    [M,N] = size(raw);
    clear objectID
    for ii_oi = 2:M
        objectID(ii_oi-1,1) = raw{ii_oi,6};
        objectID(ii_oi-1,REF_ID.BlockID) = raw{ii_oi,colID.BlockID};
        objectID(ii_oi-1,REF_ID.trialNum) = raw{ii_oi,colID.trialNum};

        ind_mainList = find(objectID_REF(:,REF_ID.object_num ) == objectID(ii_oi-1,1));
        if isempty(ind_mainList); error('missing item in main list'); end
        objectID(ii_oi-1,REF_ID.house) = objectID_REF(ind_mainList,REF_ID.house);
        objectID(ii_oi-1,REF_ID.room) = objectID_REF(ind_mainList,REF_ID.room);
        objectID(ii_oi-1,REF_ID.locationInRoom) = objectID_REF(ind_mainList,REF_ID.locationInRoom);
        objectID(ii_oi-1,REF_ID.video) = objectID_REF(ind_mainList,REF_ID.video);
        
        % update based on behavior- parsing trial-type key
        ind1 = strfind(raw{ii_oi,colID.trialTypeKey},'Brown');
        ind2 = strfind(raw{ii_oi,colID.trialTypeKey},'Gray');
        ind3 = strfind(raw{ii_oi,colID.trialTypeKey},'Miss');
        ind4 = strfind(raw{ii_oi,colID.trialTypeKey},'ExcludeTrial');
        if  isempty(ind1) &&  isempty(ind2) &&  isempty(ind3) &&  isempty(ind4)
            objectID(ii_oi-1,REF_ID.LureItem) = 1;
        end
        ind = strfind(raw{ii_oi,colID.trialTypeKey},'RHit');
        if ~isempty(ind)
            objectID(ii_oi-1,REF_ID.Rhit) = 1;
        end
        ind = strfind(raw{ii_oi,colID.trialTypeKey},'HC');
        if ~isempty(ind)
            objectID(ii_oi-1,REF_ID.HC) = 1;
        end
        ind = strfind(raw{ii_oi,colID.trialTypeKey},'RC');
        if ~isempty(ind)
            objectID(ii_oi-1,REF_ID.RC) = 1;
        end
        ind = strcmp(raw{ii_oi,colID.byMemoryFHitMiss},'CR');
        if ind ~= 0
            objectID(ii_oi-1,REF_ID.CR) = 1;
        end
        
    end
    NLures = sum(objectID(:,REF_ID.LureItem));
    Nitems = size(objectID,1) - NLures;
    behavStats.rhit_perc = sum(objectID(:,REF_ID.Rhit))/Nitems;
    behavStats.fa_perc = 1-sum(objectID(:,REF_ID.CR))/NLures; % use correct-rejection rate to calculate false-alarm rate
    behavStats.dprime = behavStats.rhit_perc - behavStats.fa_perc;
    behavStats.space_correct_perc = sum(objectID(:,REF_ID.RC) & objectID(:,REF_ID.HC))/Nitems;
    
    filename = sprintf('stimuliList_s%03d.mat',subj);
    disp(sprintf('saving data for subject %03d',subj))
    save(fullfile(main_data_localCopy,sprintf('s%03d',subj),filename),'objectID','REF_ID','excel_sheet','behavStats')
    
    % sanity check
    try
        % This is the file of stimuli shown following the scanning session
        stimlist = load(fullfile('E:\Dropbox\abcdcon\data\Data_raw\',sprintf('s%03d',subj),sprintf('ConABCD_locrec_%03d.mat',subj)),'stimlist');
        stimlist = stimlist.stimlist;
        disp('checking coherency between testing and scanning -')
        for ii = 1:length(stimlist)
            testLoc_stimlist(ii) = str2num(stimlist{ii}(end-2:end));
            ind = find(testLoc_stimlist(ii) == objectID(:,REF_ID.object_num));
            if isempty(ind)
                warning('testing mismatch with scanning file')
                continue
            end
        end
        save(fullfile(main_data_localCopy,sprintf('s%03d',subj),filename),'objectID','REF_ID','excel_sheet','behavStats','testLoc_stimlist')
    catch
        warning('testing file missing')
    end

end
